#include <stdio.h>
#include <stdlib.h>
#include<limits.h>
#include<iostream>
using namespace std;
struct node
{
    int data;
    struct node *next;
}*first=NULL;
void create(int A[],int n)
{
    int i;
    struct node *t,*last;
    first=(struct node*)malloc(sizeof(struct node));
    first->data=A[0];
    first->next=NULL;
    last=first;
    for(i=1;i<n;i++)
    {
        t=(struct node*)malloc(sizeof(struct node));
        t->data=A[i];
        t->next=NULL;
        last->next=t;
        last=t;
    }
}
void display()
{   struct node *head=first,*temp;
    temp=head;

    while(temp!=NULL)
    {
        printf("%d ",temp->data);
        temp=temp->next;
    }
}

void maxfun(struct node *p)
{
    int max=INT_MIN;
    while(p!=NULL)
    {
        if(max<(p->data))
        {
            max=p->data;
        }
        p=p->next;
    }
    printf("Maximum is %d ",max);
}
struct node* search(struct node *temp,int key) // Simple search
{
    while(temp!=NULL)
    {
        if(temp->data==key)
            return temp;


        temp=temp->next;
    }
    return NULL;
}
struct node* Rsearch(struct node *temp,int key) //recursive Search
{
    if(temp==NULL)
    {
        return temp;
    }
    if(temp->data==key)
    {
        return temp;
    }
    return Rsearch(temp->next,key);
};
int main()
{
    int a[5]={1,2,3,4,5};
    create(a,5);
    display();
    maxfun(first);
    cout<<"\n"<<search(first,4)<<"  ";                  
    cout<<"\n"<<search(first,5)<<"  ";
}
