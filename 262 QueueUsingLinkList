#include <stdio.h>
#include <stdlib.h>
#include<limits.h>
#include<iostream>
using namespace std;
struct node
{
    int data;
    struct node *next;
};
struct queue
{
    node *front;
    node *rear;
};
queue* createqueue()
{
    queue *q=new queue;
    q->front=NULL;
    q->rear=NULL;
    return q;
}
void enqueue(queue *q,int data)
{

    node *p=new node;
    if(p==NULL)
    {
        cout<<"queue is full ";
    }
    else
    {
        p->data=data;
        p->next=NULL;
        if(q->front==NULL) //for creating first NODE only, remember it
        {
            q->front=q->rear=p;
        }
        else
        {
            q->rear->next=p;
            q->rear=p;
        }
    }
}
int dequeue(queue *q)
{
    int x=-1; //we initialize this if queue is empty then return -1
    if(q->front==NULL)
        cout<<"Queue is empty \n";
    else
    {
        node*p=q->front;
        q->front=q->front->next;
        x=p->data;
        free(p);
    }
    return x;
}
void display(queue *q)
{   struct node *temp=q->front;

    while(temp!=NULL)
    {
        printf("%d ",temp->data);
        temp=temp->next;
    }
}



int main()
{
    queue *q=createqueue();

    enqueue(q,1);
    enqueue(q,2);
    enqueue(q,3);
    enqueue(q,4);
    cout<<endl<<dequeue(q)<<endl;

    display(q);
}
