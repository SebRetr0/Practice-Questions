#include <stdio.h>
#include<math.h>
#include<iostream>
using namespace std;
struct Array
{
   int A[20];
   int size;
   int length;
};

void Display(struct Array arr)
{
    int i;
    printf("\n Elements are \n");
    for(i=0;i<arr.length;i++)
    {
        printf("%d ",arr.A[i]);
    }
}
void Insert(struct Array *arr,int ind, int data)
{
    if(arr->length>=arr->size)
        cout<<"Array is already full,\n ";
    else
    {
        for(int i=arr->length;i>ind;i--)
        {
            arr->A[i]=arr->A[i-1];
        }
        (*arr).A[ind]=data;  //voh toh ese hi likh dia h, nhi toh arrow likh do yaara
        arr->length++;
    }

}
struct Array* merge(struct Array *arr1,struct Array *arr2)
{
        int i=0,j=0,k=0;
        struct Array *arr3=new struct Array[arr1->length+arr2->length];
        while(i<arr1->length && j<arr2->length)
        {
            if(arr1->A[i]<arr2->A[j])
            {
                arr3->A[k]=arr1->A[i];
                k++;
                i++;
            }
            else
            {
                arr3->A[k]=arr2->A[j];
                k++;
                j++;
            }
        }
        while(i<arr1->length)
        {
            arr3->A[k]=arr1->A[i];
            k++;
            i++;
        }
        while(j<arr2->length)
        {
            arr3->A[k]=arr2->A[j];
            k++;
            j++;
        }
        arr3->length=k;
        return arr3;



}
int main()
{
    struct Array arr1={{1,2,4},20,3};
    struct Array arr2={{3,5,6},20,3};
//    Display(arr2);
  //  Insert(&arr1,1,90);
    struct Array *arr3=merge(&arr1,&arr2);

    Display(*arr3);

}
